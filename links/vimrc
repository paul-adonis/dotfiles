" =============================  GENERAL CONFIG  ==============================
let mapleader=","               "Change leader to a comma

"win 120 80                     "Make window 80 wide x 45 tall
set nocompatible                "Use vim defaults
set ru                          "Turn on ruler
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set hidden                      "Buffers exist in the background
set ignorecase                  "Ignore case when searching
set wrapscan                    "Search wrap around the EOF
set smartcase                   "Override 'ignorecase' if search has uppercase
set incsearch                   "Do incremental searching
set hlsearch                    "Highlight searches
set nowrap                      "Don't wrap lines
set linebreak                   "Wrap lines at convenient points
set scrolloff=8                 "Start scrolling 8 lines away from margins
set sidescrolloff=15
set sidescroll=1
set shiftwidth=4
set softtabstop=4
set tabstop=4
set expandtab
"set cin             "c indent
"set autoindent
"set smartindent
"set smarttab

set foldnestmax=5               "deepest fold is 5 levels
set foldmethod=syntax           "fold by syntax
"set foldmethod=indent          "fold based on indent
"set nofoldenable               "dont fold by default

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·

autocmd FileType ruby set sw=4 sts=4 et
autocmd FileType haml set sw=4 sts=4 et
autocmd FileType coffee set sw=4 sts=4 et
autocmd FileType scss set sw=4 sts=4 et
autocmd FileType erb set sw=4 sts=4 et

" Keep undo history across sessions, by storing in file.
silent !mkdir ~/.vim/backups > /dev/null 2>&1
set undodir=~/.vim/backups
set undofile

" Auto complete stuff
set wildmode=list:longest,full     "first list:longest then full
set wildmenu                       "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~        "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif


" ================================  MAPPINGS  ==================================

" jj to exit insert mode
imap jj <Esc>

" toggle fold open/closed with <S-Space> if over a fold
nnoremap <silent> <S-Space> @=(foldlevel('.')?'za':'l')<CR>

" Move between split windows with Ctrl + arrow keys
nnoremap <silent> <C-h> <C-w>h
nnoremap <silent> <C-l> <C-w>l
nnoremap <silent> <C-k> <C-w>k
nnoremap <silent> <C-j> <C-w>j

"make search results appear in middle of screen
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz
nnoremap g* g*zz
nnoremap g# g#zz

"clear searches with ESC
nnoremap <esc> :noh<return><esc>
nnoremap <esc>^[ <esc>^[

syntax on "turn on syntax highlighting

"global find of word under cursor
"map <leader>g :execute "vimgrep /" . expand("<cword>") . "/j **" <Bar> cw<CR>

if $TMUX == ''
  set clipboard+=unnamed
endif

" =============================  INIT VUNDLES  ==============================
if filereadable(expand("~/.vim/vundles.vim"))
  source ~/.vim/vundles.vim
endif


" ========================  VUNDLE/PLUGIN MAPPINGS  =========================

" Set some shortcuts for Tabularize
"if exists(":Tabularize")
  nmap <Leader>a= :Tabularize /=<CR>
  vmap <Leader>a= :Tabularize /=<CR>
  nmap <Leader>a: :Tabularize /:\zs<CR>
  vmap <Leader>a: :Tabularize /:\zs<CR>
"endif

"NERDTree toggle set to capital T
map T :NERDTreeToggle<CR>
let g:NERDTreeWinSize = 20
let NERDTreeIgnore = ['\.pyc$','\.pyo$', '\.db$', '\.js\.map$']

"TagBar toggle set to leader + b
let g:tagbar_usearrows = 1
nnoremap <leader>b :TagbarToggle<CR>

"CtrlP toggle set to leader + t
map <leader>t :CtrlP<CR>

"leader + shift + t => reload CtrlP"
nnoremap <silent> <leader>T :ClearCtrlPCache<cr>\|:CtrlP<cr>
let g:ctrlp_custom_ignore = {
  \ 'file': '\v\.(pyc|pyo)$',
  \ }

"TComment remap to c key
map <leader>/ <c-_><c-_>

"Yankring map display to leader y
nnoremap <silent> <leader>y :YRShow<CR>

"Gundo - GUI Undo Tree (visualized)
map <leader>u :GundoToggle<CR>

"Remapping yankring n/p to meta key
let g:yankring_replace_n_pkey = '<m-p>'
let g:yankring_replace_n_nkey = '<m-n>'

"Mappings for git blame
map <leader>gb :Gblame<CR>
map <leader>gh :Gbrowse<CR>

" leader + f to startup an ack search
" nmap <Leader>f :Ack<Space>
" let g:ack_default_options =
"       \ " -s -H --nocolor --nogroup --nocolumn --smart-case --follow"

"let g:UltiSnipsExpandTrigger=""
"let g:UltiSnipsJumpForwardTrigger=""
"let g:UltiSnipsJumpBackwardTrigger=""

"<leader><leader>w is default for vim motion plugin

"Use CamelCaseMotion for normal w, b, e
"map <silent> w <Plug>CamelCaseMotion_w 
"map <silent> b <Plug>CamelCaseMotion_b 
"map <silent> e <Plug>CamelCaseMotion_e 
"sunmap w
"sunmap b
"sunmap e

"<leader>ig is default for vim indentation guide

" assign autoformat key to leader + '='
noremap <leader>= :Autoformat<CR>

"Need to set coloscheme after vundles are loaded
"colorscheme desert
"colorscheme solarized
colorscheme molokai
hi Folded guibg=#3e3e3e
hi Folded guifg=#b0b0b0
"set background=light             "Options are 'dark' or 'light'
"Set F5 to toggle background color
"call togglebg#map("<F5>")

